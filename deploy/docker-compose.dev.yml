version: '3'

services:
  gateway:
    build:
      context: ../production/gateway
      dockerfile: Dockerfile.dev
    hostname: gateway
    volumes:
      - ../production/gateway:/app
      - ../production/broker/config/certs:/certs:ro
    ports:
      - "8080:8080"
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      API_PORT: 8080
      RABBITMQ_URL: amqp://test:test@rabbitmq:5672
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  auth:
    build:
      context: ../production/auth
      dockerfile: Dockerfile.dev
    hostname: auth
    volumes:
      - ../production/auth:/app
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      RABBITMQ_URL: amqp://test:test@rabbitmq:5672
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  user:
    build:
      context: ../production/user
      dockerfile: Dockerfile.dev
    hostname: user
    volumes:
      - ../production/user:/app
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      RABBITMQ_URL: amqp://test:test@rabbitmq:5672
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  websocket:
    build:
      context: ../production/websocket
      dockerfile: Dockerfile.dev
    hostname: websocket
    volumes:
      - ../production/websocket:/app
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      API_PORT: 8081
      RABBITMQ_URL: amqp://test:test@rabbitmq:5672
    ports:
      - "8081:8081"
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  admin:
    build:
      context: ../production/admin
      dockerfile: Dockerfile.dev
    hostname: admin
    volumes:
      - ../production/admin:/app
      - ../data/admin:/config
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      RABBITMQ_URL: amqp://test:test@rabbitmq:5672
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  rabbitmq:
    build: 
      context: ../production/broker
      dockerfile: Dockerfile
    hostname: rabbitmq
    user: 0:0
    environment:
      RABBITMQ_USER: 'test'
      RABBITMQ_PASSWORD: 'test'
      TZ: Europe/Warsaw
    ports:
      - "5672:5672" # AMQP
      - "5671:5671" # AMQP over TLS
      - "15672:15672"
    volumes:
      - ../production/broker/config:/etc/rabbitmq/:rw
      - ../data/broker/logs:/var/log/rabbitmq:rw
      - ../data/broker/data:/var/lib/rabbitmq:rw
    env_file:
      - ../.env

  redis:
    image: redis
    hostname: redis
    env_file:
      - ../.env

  db:
    build:
      context: ../production/database
      dockerfile: Dockerfile.development
    restart: always
    hostname: db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      TZ: "Europe/Warsaw"
    volumes:
      - ../production/database/init/:/docker-entrypoint-initdb.d/
    env_file:
      - ../.env
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    hostname: mongo-express
    environment:
      ME_CONFIG_MONGODB_URL: ${MOGNO_ROOT_DSN}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
    env_file:
      - ../.env
    ports:
      - 8088:8081
    restart: unless-stopped
    depends_on:
      - db
