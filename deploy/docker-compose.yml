version: '3'

services:
  gateway:
    build:
      context: ../production/gateway
      dockerfile: Dockerfile
    hostname: chat-api-gateway
    volumes:
      - ../production/gateway:/app
      - ../production/broker/config/certs:/certs:ro
      - ../data/avatars:/data/avatars
    ports:
      - "8080:8080"
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      API_PORT: 8080
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  auth:
    build:
      context: ../production/auth
      dockerfile: Dockerfile
    hostname: chat-api-auth
    volumes:
      - ../production/auth:/app
      - ../production/broker/config/certs:/certs:ro
      - ../data/auth:/config
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  user:
    build:
      context: ../production/user
      dockerfile: Dockerfile
    hostname: chat-api-user
    volumes:
      - ../production/user:/app
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  websocket:
    build:
      context: ../production/websocket
      dockerfile: Dockerfile
    hostname: chat-api-ws
    volumes:
      - ../production/websocket:/app
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
      API_PORT: 8081
    ports:
      - "8081:8081"
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  admin:
    build:
      context: ../production/admin
      dockerfile: Dockerfile
    hostname: chat-api-admin
    volumes:
      - ../production/admin:/app
      - ../data/admin:/config
      - ../production/broker/config/certs:/certs:ro
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Warsaw
    env_file:
      - ../.env
    depends_on:
      - rabbitmq

  rabbitmq:
    build: 
      context: ../production/broker
      dockerfile: Dockerfile
    hostname: rabbitmq
    user: 0:0
    environment:
      TZ: Europe/Warsaw
    ports:
      - "5672:5672" # AMQP
      - "5671:5671" # AMQP over TLS
      - "15672:15672"
    volumes:
      - ../production/broker/config:/etc/rabbitmq/:rw
      - ../data/broker/logs:/var/log/rabbitmq:rw
      - ../data/broker/data:/var/lib/rabbitmq:rw
    env_file:
      - ../.env

  redis:
    image: redis
    hostname: redis
    env_file:
      - ../.env

  db:
    build:
      context: ../production/database
      dockerfile: Dockerfile
    restart: always
    hostname: db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      TZ: "Europe/Warsaw"
    volumes:
      - ../production/database/init/:/docker-entrypoint-initdb.d/
      - ../data/database:/data/db
    env_file:
      - ../.env
    ports:
      - 27017:27017

  proxy:
    image: haproxy:2.0
    restart: always
    hostname: proxy
    user: 0:0
    volumes:
      - ../production/proxy/config:/usr/local/etc/haproxy/
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ../.env
